{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SUMOParking\\\\App\\\\Screens\\\\RegisterScreen.js\";\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Button, Input, Text } from 'react-native-elements';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth, database } from \"../firebase\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackTitle: \"Login\"\n    });\n  }, [navigation]);\n\n  var register = function register() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n      authUser.user.updateProfile({\n        displayName: name,\n        emailName: email\n      });\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var writeUserData = function writeUserData() {\n    database.ref('Users/' + password).set({\n      username: name,\n      email: email,\n      carnumber: password\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    h3: true,\n    style: {\n      marginBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Register\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Full Name\",\n    autoFocus: true,\n    type: \"text\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email Address\",\n    type: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Car Number\",\n    secureTextEntry: true,\n    type: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    onSubmitEditing: writeUserData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), React.createElement(Button, {\n    containerStyle: styles.button,\n    raised: true,\n    title: \"Register\",\n    onPress: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/hp/Desktop/SUMOParking/App/Screens/RegisterScreen.js"],"names":["React","useLayoutEffect","useState","StatusBar","Button","Input","Text","auth","database","RegisterScreen","navigation","name","setName","email","setEmail","password","setPassword","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","authUser","user","updateProfile","displayName","emailName","catch","error","alert","message","writeUserData","ref","set","username","carnumber","styles","container","marginBottom","inputContainer","text","button","height","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { KeyboardAvoidingView } from 'react-native'\r\nimport { Button, Input, Text } from 'react-native-elements'\r\nimport { StyleSheet, View } from 'react-native'\r\nimport { auth, database } from '../firebase'\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerBackTitle: \"Login\",\r\n\r\n        })\r\n    }, [navigation]);\r\n\r\n    const register = () => {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then(authUser => {\r\n                authUser.user.updateProfile({\r\n                    displayName: name,\r\n                    emailName: email,\r\n\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message))\r\n    }\r\n\r\n    const writeUserData = () => {\r\n        database.ref('Users/' + password).set({\r\n            username: name,\r\n            email: email,\r\n            carnumber: password\r\n          });\r\n    }\r\n    // function writeUserData(name, email) {\r\n    //     database.ref('Users/' + email).set({\r\n    //       username: name,\r\n    //       email: email\r\n    //     });\r\n    //   }\r\n\r\n    return (\r\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n            <StatusBar style=\"light\" /> \r\n            <Text h3 style={{ marginBottom: 50}}>\r\n                Register\r\n            </Text>\r\n\r\n            <View style={styles.inputContainer}>\r\n                <Input placeholder=\"Full Name\" autoFocus type=\"text\" value={name} onChangeText={text => setName(text)}/>\r\n                <Input placeholder=\"Email Address\" type=\"email\" value={email} onChangeText={text => setEmail(text)}/>\r\n                <Input placeholder=\"Car Number\" secureTextEntry type=\"password\" value={password} onChangeText={text => setPassword(text)} onSubmitEditing={writeUserData}/>\r\n\r\n            </View>\r\n\r\n            <Button \r\n                containerStyle={styles.button} \r\n                raised title=\"Register\" \r\n                onPress={register} \r\n            />\r\n\r\n            <View style={{height: 100}}/>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n    },\r\n    inputContainer: {\r\n        width: 300,\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 10,\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}